import os
import discord
from discord.ext import tasks
from discord import app_commands
from datetime import datetime
import aiohttp

# ================= CONFIG =================
TOKEN = os.environ.get("DISCORD_TOKEN")
TARGET_CHANNEL_ID = 123456789012345678
ADMIN_CHANNEL_ID = 123456789012345678
GUIDE_CHANNEL_ID = 123456789012345678
PING_URL = os.environ.get("https://bot-zo60.onrender.com")  # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: https://bot-zo60.onrender.com

intents = discord.Intents.default()
intents.members = True
bot = discord.Client(intents=intents)
tree = app_commands.CommandTree(bot)

# ================= KEEP ALIVE =================
@tasks.loop(minutes=5)
async def ping_self():
    if PING_URL:
        try:
            async with aiohttp.ClientSession() as session:
                await session.get(PING_URL)
        except:
            pass

# ================= ‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å Command =================
@tree.command(name="‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å", description="‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á‡πÉ‡∏Ñ‡∏£‡∏ö‡∏≤‡∏á‡∏Ñ‡∏ô")
async def send_message(
    interaction: discord.Interaction,
    user: discord.Member,
    message: str,
    reveal: app_commands.Choice[str]
):
    await interaction.response.defer(ephemeral=True)
    guild = interaction.guild
    target_channel = guild.get_channel(TARGET_CHANNEL_ID)
    admin_channel = guild.get_channel(ADMIN_CHANNEL_ID)

    # ‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å
    await target_channel.send(f"**‡∏ñ‡∏∂‡∏á {user.mention}**\n{message}")

    # ‡∏™‡πà‡∏á DM
    sender_name = interaction.user.display_name if reveal.value == "yes" else "‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏ï‡∏±‡∏ß‡∏ï‡∏ô"
    try:
        await user.send(f"‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å {sender_name}:\n\n{message}")
    except:
        pass

    # Log ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    embed = discord.Embed(title="üì© ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà", color=0x1ABC9C)
    embed.add_field(name="‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á", value=f"{interaction.user.mention} ({'‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢' if reveal.value == 'yes' else '‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢'})", inline=False)
    embed.add_field(name="‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö", value=f"{user.mention} ({user.id})", inline=False)
    embed.add_field(name="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", value=message, inline=False)
    embed.set_footer(text=f"üìÖ {datetime.now().strftime('%d/%m/%Y ‡πÄ‡∏ß‡∏•‡∏≤ %H:%M')}")
    await admin_channel.send(embed=embed)

    await interaction.followup.send("‚úÖ ‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

# ================= Choices =================
@send_message.autocomplete("reveal")
async def reveal_autocomplete(interaction: discord.Interaction, current: str):
    choices = [
        app_commands.Choice(name="‡πÉ‡∏ä‡πà (‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏ä‡∏∑‡πà‡∏≠)", value="yes"),
        app_commands.Choice(name="‡πÑ‡∏°‡πà (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏ä‡∏∑‡πà‡∏≠)", value="no"),
    ]
    return [c for c in choices if current.lower() in c.name.lower()]

# ================= Bot Events =================
@bot.event
async def on_ready():
    await tree.sync()
    print(f"‚úÖ Logged in as {bot.user}")
    ping_self.start()

# ================= RUN BOT =================
bot.run(TOKEN)
