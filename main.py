import os
import discord
from discord import app_commands
from discord.ext import commands
from datetime import datetime
from aiohttp import web

# ================= CONFIG =================
TOKEN = os.environ.get("DISCORD_TOKEN")  # ‡∏î‡∏∂‡∏á Token ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏à‡∏≤‡∏Å Environment Variable

GUILD_ID = 1209931632782344243           # ‡πÉ‡∏™‡πà ID ‡∏Ç‡∏≠‡∏á Server
TARGET_CHANNEL_ID = 1406537424947122266  # ‡∏´‡πâ‡∏≠‡∏á‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å
ADMIN_CHANNEL_ID = 1406539787594240041   # ‡∏´‡πâ‡∏≠‡∏á log ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
GUIDE_CHANNEL_ID = 1406537337676103742   # ‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠ / ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
CHECK_ROLE_ID = 1209948561387683921      # Role ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö /‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
PORT = int(os.environ.get("PORT", 3000)) # ‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Web server ping

# Emoji placeholders (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡πÉ‡∏ô Server ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
EMOJI_REPLY = "üíå"  # ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏™‡πà‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ Reply
EMOJI_ALERT = "üì®"  # ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏™‡πà‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ ‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å
EMOJI_CRASH = "üí•"  # ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏™‡πà‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ Crash/Error
EMOJI_LOG = "üì©"    # ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏™‡πà‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ Log
EMOJI_CHECK = "üîé"  # ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏™‡πà‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö

# ================= BOT SETUP =================
intents = discord.Intents.default()
intents.members = True
bot = commands.Bot(command_prefix="!", intents=intents)
tree = bot.tree

# ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
last_messages = {}  # {user.id: {"msg": str, "hint": str, "time": datetime, "sender": int}}

# ================= HELP / GUIDE =================
async def send_guide():
    await bot.wait_until_ready()
    guide_channel = bot.get_channel(GUIDE_CHANNEL_ID)
    if guide_channel:
        await guide_channel.purge(limit=100)
        embed = discord.Embed(
            title=f"{EMOJI_ALERT} ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å",
            description="‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:\n`/‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å user:@‡∏ä‡∏∑‡πà‡∏≠ message:‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° hint:‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ`\n\n"
                        "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: `/‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å @‡πÇ‡∏à ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢ hint:‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏á‡∏≤‡∏ô`\n\n"
                        f"**/‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏® user:@‡∏ä‡∏∑‡πà‡∏≠ role:@Role** - ‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏®‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á",
            color=0x5865F2
        )
        embed.set_footer(text="‡∏£‡∏∞‡∏ö‡∏ö‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
        await guide_channel.send(embed=embed)

# ================= CRASH LOG =================
async def send_crash_log(error_msg):
    await bot.wait_until_ready()
    admin_channel = bot.get_channel(ADMIN_CHANNEL_ID)
    if admin_channel:
        embed = discord.Embed(
            title=f"{EMOJI_CRASH} Bot Crash/Error",
            description=error_msg,
            color=0xE74C3C
        )
        embed.set_footer(text=f"üìÖ {datetime.now().strftime('%d/%m/%Y ‡πÄ‡∏ß‡∏•‡∏≤ %H:%M')}")
        await admin_channel.send(embed=embed)

# ================= Modal ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö =================
class ReplyModal(discord.ui.Modal, title=f"{EMOJI_REPLY} ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"):
    def __init__(self, sender_id, original_embed, original_message):
        super().__init__()
        self.sender_id = sender_id
        self.original_embed = original_embed
        self.original_message = original_message

        self.reply_input = discord.ui.TextInput(
            label="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö",
            style=discord.TextStyle.paragraph,
            required=True,
            max_length=500
        )
        self.add_item(self.reply_input)

    async def on_submit(self, interaction: discord.Interaction):
        reply_text = self.reply_input.value
        sender = await bot.fetch_user(self.sender_id)

        if sender:
            await sender.send(f"{EMOJI_REPLY} ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å {interaction.user.display_name}:\n\n{reply_text}")

        updated_embed = self.original_embed.copy()
        updated_embed.add_field(name="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö", value=reply_text, inline=False)
        await self.original_message.edit(embed=updated_embed, view=None)

        await interaction.response.send_message("‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)

# ================= VIEW ‡∏õ‡∏∏‡πà‡∏° =================
class ReplyView(discord.ui.View):
    def __init__(self, sender_id, original_embed, original_message):
        super().__init__(timeout=None)
        self.sender_id = sender_id
        self.original_embed = original_embed
        self.original_message = original_message

    @discord.ui.button(label=f"{EMOJI_REPLY} ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö", style=discord.ButtonStyle.primary)
    async def reply_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.channel.id != TARGET_CHANNEL_ID:
            return await interaction.response.send_message("‚ùå ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å", ephemeral=True)
        await interaction.response.send_modal(
            ReplyModal(self.sender_id, self.original_embed, self.original_message)
        )

# ================= ‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å Command =================
@tree.command(name="‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å", description="‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á‡πÉ‡∏Ñ‡∏£‡∏ö‡∏≤‡∏á‡∏Ñ‡∏ô (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏ï‡∏±‡∏ß‡∏ï‡∏ô)")
async def send_message(interaction: discord.Interaction, user: discord.Member, message: str, hint: str = "‡πÑ‡∏°‡πà‡∏°‡∏µ"):
    try:
        if interaction.guild.id != GUILD_ID:
            return await interaction.response.send_message("‚ùå ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Server ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î", ephemeral=True)
        if interaction.channel.id != TARGET_CHANNEL_ID:
            return await interaction.response.send_message("‚ùå ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å", ephemeral=True)

        await interaction.response.defer(ephemeral=True)
        guild = interaction.guild
        target_channel = guild.get_channel(TARGET_CHANNEL_ID)
        admin_channel = guild.get_channel(ADMIN_CHANNEL_ID)

        embed = discord.Embed(
            title=f"{EMOJI_ALERT} ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì",
            color=0x2ECC71,
            timestamp=datetime.now()
        )
        embed.add_field(name="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", value=message, inline=False)
        embed.add_field(name="‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ", value=hint if hint else "‡πÑ‡∏°‡πà‡∏°‡∏µ", inline=False)
        embed.set_footer(text="‡∏£‡∏∞‡∏ö‡∏ö‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")

        msg_sent = await target_channel.send(content=f"{user.mention}", embed=embed)

        view = ReplyView(sender_id=interaction.user.id, original_embed=embed, original_message=msg_sent)
        await msg_sent.edit(view=view)

        try:
            await user.send(embed=embed, view=view)
        except:
            pass

        log_embed = discord.Embed(title=f"{EMOJI_LOG} ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà", color=0x1ABC9C)
        log_embed.add_field(name="‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á", value=f"{interaction.user.mention} (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏ï‡∏±‡∏ß‡∏ï‡∏ô)", inline=False)
        log_embed.add_field(name="‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö", value=f"{user.mention} ({user.id})", inline=False)
        log_embed.add_field(name="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", value=message, inline=False)
        log_embed.add_field(name="‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ", value=hint if hint else "‡πÑ‡∏°‡πà‡∏°‡∏µ", inline=False)
        log_embed.set_footer(text=f"üìÖ {datetime.now().strftime('%d/%m/%Y ‡πÄ‡∏ß‡∏•‡∏≤ %H:%M')}")
        await admin_channel.send(embed=log_embed)

        last_messages[user.id] = {
            "msg": message,
            "hint": hint,
            "time": datetime.now(),
            "sender": interaction.user.id
        }

        await interaction.followup.send("‚úÖ ‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
    except Exception as e:
        await send_crash_log(str(e))

# ================= ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Command =================
@tree.command(name="‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö", description="‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
async def check_message(interaction: discord.Interaction, user: discord.Member):
    try:
        if interaction.guild.id != GUILD_ID:
            return await interaction.response.send_message("‚ùå ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Server ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î", ephemeral=True)

        role = interaction.guild.get_role(CHECK_ROLE_ID)
        if role not in interaction.user.roles:
            return await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)

        data = last_messages.get(user.id)
        if not data:
            return await interaction.response.send_message("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ", ephemeral=True)

        sender = await bot.fetch_user(data["sender"])
        embed = discord.Embed(title=f"{EMOJI_CHECK} ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î", color=0xF1C40F)
        embed.add_field(name="‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö", value=user.mention, inline=False)
        embed.add_field(name="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", value=data["msg"], inline=False)
        embed.add_field(name="‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ", value=data["hint"], inline=False)
        embed.add_field(name="‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á (‡∏ä‡∏∑‡πà‡∏≠)", value=f"{sender.name}#{sender.discriminator}", inline=False)
        embed.set_footer(text=f"üìÖ {data['time'].strftime('%d/%m/%Y ‡πÄ‡∏ß‡∏•‡∏≤ %H:%M')}")
        await interaction.response.send_message(embed=embed, ephemeral=True)
    except Exception as e:
        await send_crash_log(str(e))

# ================= ‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏® Command =================
@tree.command(name="‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏®", description="‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏®‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á")
async def move_role(interaction: discord.Interaction, user: discord.Member, role: discord.Role):
    try:
        if interaction.guild.id != GUILD_ID:
            return await interaction.response.send_message("‚ùå ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Server ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î", ephemeral=True)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô Server)
        if role in user.roles:
            await user.remove_roles(role)
            await interaction.response.send_message(f"‚úÖ ‡∏•‡∏ö‡∏¢‡∏® {role.name} ‡∏Ç‡∏≠‡∏á {user.display_name} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", ephemeral=True)
        else:
            await user.add_roles(role)
            await interaction.response.send_message(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏® {role.name} ‡πÉ‡∏´‡πâ {user.display_name} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", ephemeral=True)
    except Exception as e:
        await send_crash_log(str(e))
        await interaction.response.send_message("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏®", ephemeral=True)

# ================= Bot Events =================
@bot.event
async def on_ready():
    try:
        await tree.sync(guild=discord.Object(id=GUILD_ID))
        print(f"{bot.user} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!")
        await send_guide()
    except Exception as e:
        await send_crash_log(str(e))

# ================= Web server ping =================
async def handle(request):
    return web.Response(text="Bot is alive!")

app = web.Application()
app.add_routes([web.get('/', handle)])

# ================= Run bot =================
import asyncio

async def main():
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, '0.0.0.0', PORT)
    await site.start()
    await bot.start(TOKEN)

asyncio.run(main())
