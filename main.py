import os
import discord
from discord import app_commands
from datetime import datetime
from aiohttp import web
import asyncio

# ================= CONFIG =================
TOKEN = os.environ.get("DISCORD_TOKEN")  # Token ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
GUILD_ID = 1209931632782344243           # Server ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
TARGET_CHANNEL_ID = 1406537424947122266  # ‡∏´‡πâ‡∏≠‡∏á‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å
ADMIN_CHANNEL_ID = 1406539787594240041   # ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö Log ‡∏Ç‡∏≠‡∏á Admin
GUIDE_CHANNEL_ID = 1406537337676103742   # ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å
CHECK_ROLE_ID = 1407172158223814676      # Role ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)
ROLE_GUIDE_CHANNEL_ID = 1407702878017159329  # ‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏¢‡∏®
ROLE_COMMAND_CHANNEL_ID = 1407702892789502054 # ‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏¢‡∏®
PORT = int(os.environ.get("PORT", 3000))      # ‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå

# ================= INTENTS =================
intents = discord.Intents.default()
intents.members = True
bot = discord.Client(intents=intents)
tree = app_commands.CommandTree(bot)

# ================= ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô =================
async def send_guide():
    await bot.wait_until_ready()
    guide_channel = bot.get_channel(GUIDE_CHANNEL_ID)
    if guide_channel:
        await guide_channel.purge(limit=100)
        embed = discord.Embed(
            title="üåÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å",
            description="‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:\n`/‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å user:@‡∏ä‡∏∑‡πà‡∏≠ message:‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° hint:‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ`\n\n"
                        "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: `/‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å @‡πÇ‡∏à ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢ hint:‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏á‡∏≤‡∏ô`",
            color=0x5865F2
        )
        embed.set_footer(text="üì¨ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
        await guide_channel.send(embed=embed)

async def send_role_guide():
    await bot.wait_until_ready()
    guide_channel = bot.get_channel(ROLE_GUIDE_CHANNEL_ID)
    if guide_channel:
        await guide_channel.purge(limit=100)
        embed = discord.Embed(
            title="üåÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏®",
            description=(f"‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á <#{ROLE_COMMAND_CHANNEL_ID}> ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô\n\n"
                         "`/‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏® user:@‡∏ä‡∏∑‡πà‡∏≠ role:@Role duration:‡πÄ‡∏ß‡∏•‡∏≤`\n\n"
                         "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\n`/‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏® @‡πÇ‡∏à @VIP 10m`\n`/‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏® @‡πÇ‡∏à @VIP`\n\n"
                         "‚è≥ ‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ß‡∏•‡∏≤:\n"
                         "`1m` = 1 ‡∏ô‡∏≤‡∏ó‡∏µ\n"
                         "`1h` = 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á\n\n"
                         "‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏¢‡∏®‡∏ô‡∏±‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô ‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ"),
            color=0x5865F2
        )
        embed.set_footer(text="üì¨ ‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏®‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
        await guide_channel.send(embed=embed)

async def send_crash_log(error_msg):
    await bot.wait_until_ready()
    admin_channel = bot.get_channel(ADMIN_CHANNEL_ID)
    if admin_channel:
        embed = discord.Embed(
            title="‚ö†Ô∏è Bot Crash/Error",
            description=error_msg,
            color=0xE74C3C
        )
        embed.set_footer(text=f"‚ö†Ô∏è {datetime.now().strftime('%d/%m/%Y ‡πÄ‡∏ß‡∏•‡∏≤ %H:%M')}")
        await admin_channel.send(embed=embed)

# ================= Modal ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö =================
class ReplyModal(discord.ui.Modal, title="üí¨ ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"):
    def __init__(self, sender_id, original_embed, original_message):
        super().__init__()
        self.sender_id = sender_id
        self.original_embed = original_embed
        self.original_message = original_message

        self.reply_input = discord.ui.TextInput(
            label="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö",
            style=discord.TextStyle.paragraph,
            required=True,
            max_length=500
        )
        self.add_item(self.reply_input)

    async def on_submit(self, interaction: discord.Interaction):
        reply_text = self.reply_input.value
        sender = await bot.fetch_user(self.sender_id)
        if sender:
            await sender.send(f"üíå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å {interaction.user.display_name}:\n\n{reply_text}")

        updated_embed = self.original_embed.copy()
        updated_embed.add_field(name="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö", value=reply_text, inline=False)
        await self.original_message.edit(embed=updated_embed, view=None)
        await interaction.response.send_message("üí¨ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)

class ReplyView(discord.ui.View):
    def __init__(self, sender_id, original_embed, original_message):
        super().__init__(timeout=None)
        self.sender_id = sender_id
        self.original_embed = original_embed
        self.original_message = original_message

    @discord.ui.button(label="üí¨ ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö", style=discord.ButtonStyle.primary)
    async def reply_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.channel.id != TARGET_CHANNEL_ID:
            return await interaction.response.send_message("üí¨ ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å", ephemeral=True)
        await interaction.response.send_modal(ReplyModal(self.sender_id, self.original_embed, self.original_message))

# ================= ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ß‡∏•‡∏≤ =================
def parse_duration(duration: str) -> int | None:
    try:
        if duration.endswith("m"):
            return int(duration[:-1]) * 60
        elif duration.endswith("h"):
            return int(duration[:-1]) * 3600
        elif duration.isdigit():
            return int(duration) * 60  # default ‡∏ô‡∏≤‡∏ó‡∏µ
        else:
            return None
    except:
        return None

# ================= ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ô DM =================
async def countdown_role_transfer(user: discord.Member, role: discord.Role, sender: discord.Member, seconds: int):
    try:
        minutes = seconds // 60
        secs = seconds % 60
        msg = await user.send(
            f"‚åõ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏® `{role.name}` ‡∏à‡∏≤‡∏Å {sender.mention}\n"
            f"‡∏à‡∏∞‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô **{minutes}:{secs:02d}**"
        )

        while seconds > 0:
            await asyncio.sleep(1)
            seconds -= 1
            minutes = seconds // 60
            secs = seconds % 60
            try:
                await msg.edit(content=
                    f"‚åõ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏® `{role.name}` ‡∏à‡∏≤‡∏Å {sender.mention}\n"
                    f"‡∏à‡∏∞‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô **{minutes}:{secs:02d}**"
                )
            except:
                pass

        # ‡∏Ñ‡∏£‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ ‚Üí ‡∏•‡∏ö role ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö + ‡∏Ñ‡∏∑‡∏ô role ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á
        await user.remove_roles(role)
        await sender.add_roles(role)
        try:
            await msg.edit(content=f"‚åõ ‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏¢‡∏® `{role.name}` ‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏∑‡∏ô‡πÉ‡∏´‡πâ {sender.mention}")
        except:
            await user.send(f"‚åõ ‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏¢‡∏® `{role.name}` ‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏∑‡∏ô‡πÉ‡∏´‡πâ {sender.mention}")

        # log ‡∏ï‡∏≠‡∏ô‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤
        admin_channel = bot.get_channel(ADMIN_CHANNEL_ID)
        if admin_channel:
            expire_embed = discord.Embed(
                title="‚åõ ‡∏¢‡∏®‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤",
                description=f"‡∏¢‡∏® {role.mention} ‡∏Ç‡∏≠‡∏á {user.mention} ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡πÉ‡∏´‡πâ {sender.mention}",
                color=0xE67E22,
                timestamp=datetime.now()
            )
            await admin_channel.send(embed=expire_embed)

    except Exception as e:
        await send_crash_log(str(e))

# ================= ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á =================
@tree.command(name="‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å", description="‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á‡πÉ‡∏Ñ‡∏£‡∏ö‡∏≤‡∏á‡∏Ñ‡∏ô (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏ï‡∏±‡∏ß‡∏ï‡∏ô)", guild=discord.Object(id=GUILD_ID))
async def send_message(interaction: discord.Interaction, user: discord.Member, message: str, hint: str = "‡πÑ‡∏°‡πà‡∏°‡∏µ"):
    try:
        if interaction.channel.id != TARGET_CHANNEL_ID:
            return await interaction.response.send_message("üö´ ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å", ephemeral=True)

        await interaction.response.defer(ephemeral=True)
        target_channel = interaction.guild.get_channel(TARGET_CHANNEL_ID)
        admin_channel = interaction.guild.get_channel(ADMIN_CHANNEL_ID)

        embed = discord.Embed(
            title="üì¨ ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì",
            color=0x2ECC71,
            timestamp=datetime.now()
        )
        embed.add_field(name="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", value=message, inline=False)
        embed.add_field(name="‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ", value=hint if hint else "‡πÑ‡∏°‡πà‡∏°‡∏µ", inline=False)
        embed.set_footer(text="üì¨ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")

        msg_sent = await target_channel.send(content=f"{user.mention}", embed=embed)
        view = ReplyView(sender_id=interaction.user.id, original_embed=embed, original_message=msg_sent)
        await msg_sent.edit(view=view)

        try:
            await user.send(embed=embed, view=view)
        except:
            pass

        log_embed = discord.Embed(title="üì¨ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà", color=0x1ABC9C)
        log_embed.add_field(name="‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á", value=f"{interaction.user.mention}", inline=False)
        log_embed.add_field(name="‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö", value=f"{user.mention} ({user.id})", inline=False)
        log_embed.add_field(name="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", value=message, inline=False)
        log_embed.add_field(name="‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ", value=hint if hint else "‡πÑ‡∏°‡πà‡∏°‡∏µ", inline=False)
        log_embed.set_footer(text=f"üì¨ {datetime.now().strftime('%d/%m/%Y ‡πÄ‡∏ß‡∏•‡∏≤ %H:%M')}")
        await admin_channel.send(embed=log_embed)

        await interaction.followup.send("‚úÖ ‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", ephemeral=True)

    except Exception as e:
        await send_crash_log(str(e))
        await interaction.followup.send("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", ephemeral=True)

@tree.command(name="‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏®", description="‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏®‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á", guild=discord.Object(id=GUILD_ID))
async def move_role(interaction: discord.Interaction, user: discord.Member, role: discord.Role, duration: str = None):
    try:
        if interaction.channel.id != ROLE_COMMAND_CHANNEL_ID:
            return await interaction.response.send_message("üö´ ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏¢‡∏®", ephemeral=True)

        sender = interaction.user

        if role not in sender.roles:
            return await interaction.response.send_message(
                f"‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ Role `{role.name}` ‡∏≠‡∏¢‡∏π‡πà ‡∏à‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏î‡πâ",
                ephemeral=True
            )

        # ‡∏¢‡πâ‡∏≤‡∏¢ role
        await sender.remove_roles(role)
        await user.add_roles(role)
        await interaction.response.send_message(
            f"‚úÖ ‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏® `{role.name}` ‡∏à‡∏≤‡∏Å {sender.mention} ‡πÑ‡∏õ‡∏¢‡∏±‡∏á {user.mention} "
            f"{'‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ ' + duration if duration else '(‡∏ñ‡∏≤‡∏ß‡∏£)'}",
            ephemeral=True
        )

        # log ‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢
        admin_channel = interaction.guild.get_channel(ADMIN_CHANNEL_ID)
        if admin_channel:
            log_embed = discord.Embed(
                title="üì¨ ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏¢‡∏®",
                color=0x3498DB,
                timestamp=datetime.now()
            )
            log_embed.add_field(name="‡∏ú‡∏π‡πâ‡∏¢‡πâ‡∏≤‡∏¢", value=f"{sender.mention}", inline=False)
            log_embed.add_field(name="‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö", value=f"{user.mention}", inline=False)
            log_embed.add_field(name="‡∏¢‡∏®", value=f"{role.mention}", inline=False)
            log_embed.add_field(name="‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤", value=duration if duration else "‡∏ñ‡∏≤‡∏ß‡∏£", inline=False)
            await admin_channel.send(embed=log_embed)

        # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ ‚Üí ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á DM
        if duration:
            seconds = parse_duration(duration)
            if seconds:
                asyncio.create_task(countdown_role_transfer(user, role, sender, seconds))
            else:
                await interaction.followup.send("‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÄ‡∏ä‡πà‡∏ô 10m ‡∏´‡∏£‡∏∑‡∏≠ 2h", ephemeral=True)

    except Exception as e:
        await send_crash_log(str(e))
        await interaction.followup.send("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", ephemeral=True)

# ================= WEB SERVER =================
async def start_webserver():
    async def handle(request):
        return web.Response(text="Bot is running ‚úÖ")

    app = web.Application()
    app.router.add_get("/", handle)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", PORT)
    await site.start()
    print(f"Web server started on port {PORT} ‚úÖ")

# ================= EVENT =================
@bot.event
async def on_ready():
    print(f"‚úÖ Bot Logged in as {bot.user}")
    await bot.change_presence(activity=discord.Game(name="Jojo üíñ"))

    await send_guide()
    await send_role_guide()

    try:
        guild = discord.Object(id=GUILD_ID)
        await tree.sync(guild=guild)
        await tree.sync()
        print("‚úÖ Slash commands synced.")
    except Exception as e:
        print(f"‚ùå Sync failed: {e}")

    bot.loop.create_task(start_webserver())

# ================= RUN =================
bot.run(TOKEN)
