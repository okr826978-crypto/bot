import os
import discord
from discord.ext import commands, tasks
from datetime import datetime
from flask import Flask
from threading import Thread

# ================= Flask server =================
app = Flask('')

@app.route('/')
def home():
    return "Bot is running!"

def run():
    port = int(os.environ.get("PORT", 8080))
    app.run(host='0.0.0.0', port=port)

# ‡∏£‡∏±‡∏ô Flask server ‡πÉ‡∏ô Thread ‡πÅ‡∏¢‡∏Å
t = Thread(target=run)
t.start()

# ================= Discord Bot =================
intents = discord.Intents.default()
intents.members = True
bot = commands.Bot(command_prefix="!", intents=intents)

# ==== CONFIG ====
BUTTON_CHANNEL_ID = 1406537337676103742
TARGET_CHANNEL_ID = 1406537424947122266
ADMIN_CHANNEL_ID = 1406539787594240041

# ================= Modal ‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° =================
class MessageModal(discord.ui.Modal, title="‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"):
    user_message = discord.ui.TextInput(
        label="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        style=discord.TextStyle.paragraph,
        required=True,
        placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö (‡∏Ñ‡∏¥‡∏î‡∏î‡∏µ‡πÜ ‡∏Å‡πà‡∏≠‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå!)"
    )
    reveal = discord.ui.TextInput(
        label="‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏ï‡∏±‡∏ß‡∏ï‡∏ô?",
        style=discord.TextStyle.short,
        required=True,
        placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå '‡πÉ‡∏ä‡πà' ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠, '‡πÑ‡∏°‡πà' ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£"
    )

    def __init__(self, target_member: discord.Member):
        super().__init__()
        self.target_member = target_member

    async def on_submit(self, interaction: discord.Interaction):
        view = ConfirmView(self.user_message.value, self.reveal.value, self.target_member)
        await interaction.response.send_message(
            f"‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏ñ‡∏∂‡∏á {self.target_member.mention} ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?", 
            view=view,
            ephemeral=True
        )

# ================= View ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô =================
class ConfirmView(discord.ui.View):
    def __init__(self, message_text, reveal_text, target_member):
        super().__init__(timeout=60)
        self.message_text = message_text
        self.reveal_text = reveal_text
        self.target_member = target_member

    @discord.ui.button(label="‚úÖ ‡πÉ‡∏ä‡πà", style=discord.ButtonStyle.success)
    async def confirm(self, interaction: discord.Interaction, button: discord.ui.Button):
        await send_message(interaction, self.message_text, self.reveal_text, self.target_member)
        self.stop()

    @discord.ui.button(label="‚ùå ‡πÑ‡∏°‡πà", style=discord.ButtonStyle.danger)
    async def cancel(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", ephemeral=True)
        self.stop()

# ================= ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° =================
async def send_message(interaction, user_message, reveal, target_member):
    guild = interaction.guild
    target_channel = guild.get_channel(TARGET_CHANNEL_ID)
    admin_channel = guild.get_channel(ADMIN_CHANNEL_ID)

    public_content = f"**‡∏ñ‡∏∂‡∏á {target_member.mention}**\n{user_message}"

    await interaction.response.send_message("‚úÖ ‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

    # ‡∏™‡πà‡∏á Webhook
    webhook = None
    try:
        if reveal.strip().lower() == "‡πÉ‡∏ä‡πà":
            webhook = await target_channel.create_webhook(
                name=interaction.user.display_name,
                avatar=await interaction.user.display_avatar.read()
            )
        else:
            webhook = await target_channel.create_webhook(name="???")

        await webhook.send(public_content)
    finally:
        if webhook:
            await webhook.delete()

    # ‡∏™‡πà‡∏á DM
    try:
        sender_name = interaction.user.display_name if reveal.strip().lower() == '‡πÉ‡∏ä‡πà' else "‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏ï‡∏±‡∏ß‡∏ï‡∏ô"
        await target_member.send(f"‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å {sender_name}:\n\n{user_message}")
    except:
        await interaction.followup.send("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ", ephemeral=True)

    # ‡∏™‡πà‡∏á Embed ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
    now = datetime.now().strftime("%d/%m/%Y ‡πÄ‡∏ß‡∏•‡∏≤ %H:%M")
    embed = discord.Embed(title="üì© ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà", color=0x1ABC9C)
    embed.add_field(
        name="‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á", 
        value=f"{interaction.user.mention} ({'‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢' if reveal.strip().lower() == '‡πÉ‡∏ä‡πà' else '‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢'})",
        inline=False
    )
    embed.add_field(name="‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö", value=f"{target_member.mention} ({target_member.id})", inline=False)
    embed.add_field(name="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", value=user_message, inline=False)
    embed.set_footer(text=f"üìÖ {now}")
    await admin_channel.send(embed=embed)

# ================= Modal ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö =================
class SearchMemberModal(discord.ui.Modal, title="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"):
    search_name = discord.ui.TextInput(
        label="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö",
        style=discord.TextStyle.short,
        required=True,
        placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠ nickname"
    )

    async def on_submit(self, interaction: discord.Interaction):
        name_query = self.search_name.value.lower()
        guild = interaction.guild
        matched_members = [m for m in guild.members if not m.bot and (name_query in m.display_name.lower() or name_query in m.name.lower())]

        if not matched_members:
            await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô", ephemeral=True)
            return

        class MemberSelect(discord.ui.Select):
            def __init__(self, members):
                options = [
                    discord.SelectOption(label=m.display_name[:45], value=str(m.id))
                    for m in members[:25]
                ]
                super().__init__(placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö", min_values=1, max_values=1, options=options)

            async def callback(self, select_interaction: discord.Interaction):
                member_id = int(self.values[0])
                target_member = guild.get_member(member_id)
                if not target_member:
                    await select_interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö", ephemeral=True)
                    return
                await select_interaction.response.send_modal(MessageModal(target_member))

        view = discord.ui.View()
        view.add_item(MemberSelect(matched_members))
        await interaction.response.send_message("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:", view=view, ephemeral=True)

# ================= Button =================
class OpenButton(discord.ui.View):
    @discord.ui.button(label="üìù ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", style=discord.ButtonStyle.primary)
    async def open_modal(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(SearchMemberModal())

# ================= Bot Events =================
@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}")
    await send_button()

# ================= ‡∏™‡πà‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ =================
async def send_button():
    await bot.wait_until_ready()
    channel = bot.get_channel(BUTTON_CHANNEL_ID)
    if channel:
        await channel.send("‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ù‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° üëá", view=OpenButton())

# ================= Run Bot =================
bot.run(os.environ["DISCORD_TOKEN"])
